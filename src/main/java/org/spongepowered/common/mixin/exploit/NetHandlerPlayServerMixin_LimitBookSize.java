/*
 * This file is part of Sponge, licensed under the MIT License (MIT).
 *
 * Copyright (c) SpongePowered <https://www.spongepowered.org>
 * Copyright (c) contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package org.spongepowered.common.mixin.exploit;

import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.NetHandlerPlayServer;
import org.spongepowered.api.network.PlayerConnection;
import org.spongepowered.api.text.Text;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Redirect;
import org.spongepowered.common.SpongeImpl;

@Mixin(NetHandlerPlayServer.class)
public abstract class NetHandlerPlayServerMixin_LimitBookSize {

    /**
     * @author Aaron1011 - January 31, 2019
     * @reason Prevents clients from sending excessively large book, avoiding
     * a chunk corruption/dupe issue
     *
     * @see <html>https://github.com/PaperMC/Paper/blob/f8058a8187da9f6185d95bb786783e12c79c8b18/Spigot-Server-Patches/0403-Book-Size-Limits.patch</html>
     */
    @Redirect(method = "processCustomPayload",
        at = @At(value = "INVOKE", target = "Lnet/minecraft/item/ItemWritableBook;isNBTValid(Lnet/minecraft/nbt/NBTTagCompound;)Z"))
    private boolean limitBookSize$onIsNBTValid(NBTTagCompound bookData) {
        NBTTagList pageList = bookData.func_150295_c("pages", 8);
        long byteTotal = 0;
        int maxBookPageSize = SpongeImpl.getGlobalConfigAdapter().getConfig().getExploits().getMaxBookPageSize();
        double multiplier = Math.max(0.3D, Math.min(1D, SpongeImpl.getGlobalConfigAdapter().getConfig().getExploits().getBookSizeTotalMultiplier()));
        long byteAllowed = maxBookPageSize;
        for (int i = 0; i < pageList.func_74745_c(); ++i) {
            String testString = pageList.func_150307_f(i);
            int byteLength = testString.getBytes(java.nio.charset.StandardCharsets.UTF_8).length;
            byteTotal += byteLength;
            int length = testString.length();
            int multibytes = 0;
            if (byteLength != length) {
                for (char c : testString.toCharArray()) {
                    if (c > 127) {
                        multibytes++;
                    }
                }
            }
            byteAllowed += (maxBookPageSize * Math.min(1, Math.max(0.1D, (double) length / 255D))) * multiplier;

            if (multibytes > 1) {
                // penalize MB
                byteAllowed -= multibytes;
            }
        }

        if (byteTotal > byteAllowed) {
            SpongeImpl.getLogger().error(((PlayerConnection) this).getPlayer().getName() + " tried to send too large of a book. Book Size: " + byteTotal + " - Allowed:  "+ byteAllowed + " - Pages: " + pageList.func_74745_c());
            SpongeImpl.getServer().func_152344_a(() -> {
                ((PlayerConnection) this).getPlayer().kick(Text.of("Book too large!"));
            });
            return false;
        }
        return true;
    }

}
